//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.1.0
//
// Created by Quasar Development at 29-03-2014
//
//---------------------------------------------------


#import "AreaAreaServiceImplServiceSoapBinding.h"
#import "AreaRequestResultHandler.h"
#import "AreaHelper.h"

@implementation AreaAreaServiceImplServiceSoapBinding
@synthesize Url,ShouldAddAdornments,Headers;

- (id) init {
    if(self = [super init])
    {
        self.Url=[NSString stringWithFormat:@"%@%@",WebserviceUrl,@"area"];
        self.ShouldAddAdornments=YES;
    }
    return self;
}

- (id) initWithUrl: (NSString*) url {
    if(self = [self init])
    {
        self.Url=url;
    }
    return self;
}

-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(AreaRequestResultHandler*) requestMgr
{
    [requestMgr sendImplementation:request];
}

-(AreaRequestResultHandler*) CreateRequestResultHandler
{
    return [[AreaRequestResultHandler alloc]init];
}
-(NSMutableURLRequest*) createRequest:(NSString *)__soapAction __request:(AreaRequestResultHandler*) __request
{
    NSString *__soapMessage=[__request getEnvelopeString];
    NSURL *__url = [NSURL URLWithString:Url];
    NSMutableURLRequest *__requestObj = [NSMutableURLRequest requestWithURL:__url];
    NSString *msgLength = [NSString stringWithFormat:@"%d", (int)[__soapMessage length]];

    [__requestObj addValue: @"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [__requestObj addValue: __soapAction forHTTPHeaderField:@"SOAPAction"];
    [__requestObj addValue: msgLength forHTTPHeaderField:@"Content-Length"];
    for (NSString* key in self.Headers) {
        [__requestObj addValue: [self.Headers objectForKey:key] forHTTPHeaderField:key];
    }
    [__requestObj setHTTPMethod:@"POST"];
    [__requestObj setHTTPBody: [__soapMessage dataUsingEncoding:NSUTF8StringEncoding]];
    return __requestObj;
}

-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(AreaRequestResultHandler*) requestMgr callback:(void (^)(AreaRequestResultHandler *)) callback
{
    [requestMgr sendImplementation:request callbackDelegate:callback];
}

-(void) addAdornments:(DDXMLElement*)__methodElement
{
    if(ShouldAddAdornments)
    {
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"id" stringValue:@"o0"]];
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"c:root" stringValue:@"1"]];
    }
}

-(NSMutableURLRequest*) createfindProvinceRequest:(NSString*) arg0 arg1:(NSString*) arg1 __request:(AreaRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"findProvince" URI:@"http://service.area.app/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
             
        DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg1ItemElement!=nil)
        {
            [__arg1ItemElement setStringValue:arg1];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(AreaRequestResultHandler*) findProvinceAsync:(NSString*) arg0 arg1:(NSString*) arg1 __target:(id) __target __handler:(SEL) __handler
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self createfindProvinceRequest:arg0 arg1: arg1 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"findProvinceResponse"];
        __res= (AreafindProvinceResponse*)[__request createObject:__result type:[AreafindProvinceResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(AreaRequestResultHandler*) findProvinceAsync:(NSString*) arg0 arg1:(NSString*) arg1 __target:(id<AreaSoapServiceResponse>) __target
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self createfindProvinceRequest:arg0 arg1: arg1 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"findProvinceResponse"];
        [__target onSuccess:(AreafindProvinceResponse*)[__request createObject:__result type:[AreafindProvinceResponse class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(AreafindProvinceResponse*) findProvince:(NSString*) arg0 arg1:(NSString*) arg1 __error:(NSError**) __error 
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self createfindProvinceRequest:arg0 arg1: arg1 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"findProvinceResponse"];
    return (AreafindProvinceResponse*)[__request createObject:__result type:[AreafindProvinceResponse class]];
}
-(NSMutableURLRequest*) creategetAllProvinceRequest:(AreaRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getAllProvince" URI:@"http://service.area.app/" parent:__request.Body];
    [self addAdornments:__methodElement];
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(AreaRequestResultHandler*) getAllProvinceAsync:(id) __target __handler:(SEL) __handler
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetAllProvinceRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"getAllProvinceResponse"];
        __res= (AreagetAllProvinceResponse*)[__request createObject:__result type:[AreagetAllProvinceResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(AreaRequestResultHandler*) getAllProvinceAsync:(id<AreaSoapServiceResponse>) __target
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetAllProvinceRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"getAllProvinceResponse"];
        [__target onSuccess:(AreagetAllProvinceResponse*)[__request createObject:__result type:[AreagetAllProvinceResponse class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(AreagetAllProvinceResponse*) getAllProvince:(NSError**) __error 
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetAllProvinceRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"getAllProvinceResponse"];
    return (AreagetAllProvinceResponse*)[__request createObject:__result type:[AreagetAllProvinceResponse class]];
}
-(NSMutableURLRequest*) creategetCityByIdRequest:(NSString*) arg0 __request:(AreaRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getCityById" URI:@"http://service.area.app/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(AreaRequestResultHandler*) getCityByIdAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetCityByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"return"];
        __res= (Areacity*)[__request createObject:__result type:[Areacity class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(AreaRequestResultHandler*) getCityByIdAsync:(NSString*) arg0 __target:(id<AreaSoapServiceResponse>) __target
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetCityByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(Areacity*)[__request createObject:__result type:[Areacity class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(Areacity*) getCityById:(NSString*) arg0 __error:(NSError**) __error 
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetCityByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"return"];
    return (Areacity*)[__request createObject:__result type:[Areacity class]];
}
-(NSMutableURLRequest*) createfindCityRequest:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __request:(AreaRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"findCity" URI:@"http://service.area.app/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
             
        DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg1ItemElement!=nil)
        {
            [__arg1ItemElement setStringValue:arg1];
        }
             
        DDXMLElement* __arg2ItemElement=[__request writeElement:arg2 type:[NSString class] name:@"arg2" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg2ItemElement!=nil)
        {
            [__arg2ItemElement setStringValue:arg2];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(AreaRequestResultHandler*) findCityAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self createfindCityRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"findCityResponse"];
        __res= (AreafindCityResponse*)[__request createObject:__result type:[AreafindCityResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(AreaRequestResultHandler*) findCityAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id<AreaSoapServiceResponse>) __target
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self createfindCityRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"findCityResponse"];
        [__target onSuccess:(AreafindCityResponse*)[__request createObject:__result type:[AreafindCityResponse class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(AreafindCityResponse*) findCity:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __error:(NSError**) __error 
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self createfindCityRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"findCityResponse"];
    return (AreafindCityResponse*)[__request createObject:__result type:[AreafindCityResponse class]];
}
-(NSMutableURLRequest*) creategetProvinceByIdRequest:(NSString*) arg0 __request:(AreaRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getProvinceById" URI:@"http://service.area.app/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(AreaRequestResultHandler*) getProvinceByIdAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetProvinceByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"return"];
        __res= (Areaprovince*)[__request createObject:__result type:[Areaprovince class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(AreaRequestResultHandler*) getProvinceByIdAsync:(NSString*) arg0 __target:(id<AreaSoapServiceResponse>) __target
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetProvinceByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(AreaRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(Areaprovince*)[__request createObject:__result type:[Areaprovince class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(Areaprovince*) getProvinceById:(NSString*) arg0 __error:(NSError**) __error 
{
    AreaRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetProvinceByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[AreaHelper getResultElement:__request.OutputBody name:@"return"];
    return (Areaprovince*)[__request createObject:__result type:[Areaprovince class]];
}

@end

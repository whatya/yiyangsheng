//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 3.0.1.0
//
// Created by Quasar Development at 29-03-2014
//
//---------------------------------------------------


#import "DicDictServiceImplServiceSoapBinding.h"
#import "DicRequestResultHandler.h"
#import "DicHelper.h"

@implementation DicDictServiceImplServiceSoapBinding
@synthesize Url,ShouldAddAdornments,Headers;

- (id) init {
    if(self = [super init])
    {
        self.Url=[NSString stringWithFormat:@"%@%@",WebserviceUrl,@"dict"];
        self.ShouldAddAdornments=YES;
    }
    return self;
}

- (id) initWithUrl: (NSString*) url {
    if(self = [self init])
    {
        self.Url=url;
    }
    return self;
}

-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(DicRequestResultHandler*) requestMgr
{
    [requestMgr sendImplementation:request];
}

-(DicRequestResultHandler*) CreateRequestResultHandler
{
    return [[DicRequestResultHandler alloc]init];
}
-(NSMutableURLRequest*) createRequest:(NSString *)__soapAction __request:(DicRequestResultHandler*) __request
{
    NSString *__soapMessage=[__request getEnvelopeString];
    NSURL *__url = [NSURL URLWithString:Url];
    NSMutableURLRequest *__requestObj = [NSMutableURLRequest requestWithURL:__url];
    NSString *msgLength = [NSString stringWithFormat:@"%d", (int)[__soapMessage length]];

    [__requestObj addValue: @"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [__requestObj addValue: __soapAction forHTTPHeaderField:@"SOAPAction"];
    [__requestObj addValue: msgLength forHTTPHeaderField:@"Content-Length"];
    for (NSString* key in self.Headers) {
        [__requestObj addValue: [self.Headers objectForKey:key] forHTTPHeaderField:key];
    }
    [__requestObj setHTTPMethod:@"POST"];
    [__requestObj setHTTPBody: [__soapMessage dataUsingEncoding:NSUTF8StringEncoding]];
    return __requestObj;
}

-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(DicRequestResultHandler*) requestMgr callback:(void (^)(DicRequestResultHandler *)) callback
{
    [requestMgr sendImplementation:request callbackDelegate:callback];
}

-(void) addAdornments:(DDXMLElement*)__methodElement
{
    if(ShouldAddAdornments)
    {
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"id" stringValue:@"o0"]];
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"c:root" stringValue:@"1"]];
    }
}

-(NSMutableURLRequest*) creategetDictByIdRequest:(NSString*) arg0 __request:(DicRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getDictById" URI:@"http://service.dict.sys/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(DicRequestResultHandler*) getDictByIdAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(DicRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"return"];
        __res= (Dicdict*)[__request createObject:__result type:[Dicdict class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(DicRequestResultHandler*) getDictByIdAsync:(NSString*) arg0 __target:(id<DicSoapServiceResponse>) __target
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(DicRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(Dicdict*)[__request createObject:__result type:[Dicdict class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(Dicdict*) getDictById:(NSString*) arg0 __error:(NSError**) __error 
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"return"];
    return (Dicdict*)[__request createObject:__result type:[Dicdict class]];
}
-(NSMutableURLRequest*) creategetDictByTypeIdRequest:(NSString*) arg0 __request:(DicRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getDictByTypeId" URI:@"http://service.dict.sys/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(DicRequestResultHandler*) getDictByTypeIdAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByTypeIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(DicRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"getDictByTypeIdResponse"];
        __res= (DicgetDictByTypeIdResponse*)[__request createObject:__result type:[DicgetDictByTypeIdResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(DicRequestResultHandler*) getDictByTypeIdAsync:(NSString*) arg0 __target:(id<DicSoapServiceResponse>) __target
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByTypeIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(DicRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"getDictByTypeIdResponse"];
        [__target onSuccess:(DicgetDictByTypeIdResponse*)[__request createObject:__result type:[DicgetDictByTypeIdResponse class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(DicgetDictByTypeIdResponse*) getDictByTypeId:(NSString*) arg0 __error:(NSError**) __error 
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByTypeIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"getDictByTypeIdResponse"];
    return (DicgetDictByTypeIdResponse*)[__request createObject:__result type:[DicgetDictByTypeIdResponse class]];
}
-(NSMutableURLRequest*) creategetDictByTypeCodeRequest:(NSString*) arg0 __request:(DicRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getDictByTypeCode" URI:@"http://service.dict.sys/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
        DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:__request.SkipNullProperties];
        if(__arg0ItemElement!=nil)
        {
            [__arg0ItemElement setStringValue:arg0];
        }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
}

-(DicRequestResultHandler*) getDictByTypeCodeAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByTypeCodeRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(DicRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"getDictByTypeCodeResponse"];
        __res= (DicgetDictByTypeCodeResponse*)[__request createObject:__result type:[DicgetDictByTypeCodeResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(DicRequestResultHandler*) getDictByTypeCodeAsync:(NSString*) arg0 __target:(id<DicSoapServiceResponse>) __target
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByTypeCodeRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(DicRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"getDictByTypeCodeResponse"];
        [__target onSuccess:(DicgetDictByTypeCodeResponse*)[__request createObject:__result type:[DicgetDictByTypeCodeResponse class]]];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(DicgetDictByTypeCodeResponse*) getDictByTypeCode:(NSString*) arg0 __error:(NSError**) __error 
{
    DicRequestResultHandler* __request = [self CreateRequestResultHandler];        
    NSMutableURLRequest *__requestObj=[self creategetDictByTypeCodeRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[DicHelper getResultElement:__request.OutputBody name:@"getDictByTypeCodeResponse"];
    return (DicgetDictByTypeCodeResponse*)[__request createObject:__result type:[DicgetDictByTypeCodeResponse class]];
}

@end
